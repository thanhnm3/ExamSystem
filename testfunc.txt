Tuyệt vời! Tôi sẽ hướng dẫn bạn cách kiểm tra chương trình chạy hoàn hảo. Từ log tôi thấy ứng dụng đã khởi động thành công! ��

## 🧪 **Hướng dẫn kiểm tra chương trình**

### **1. Kiểm tra ứng dụng đã chạy**

```bash
netstat -an | findstr :8080
```
Perfect! ✅ Ứng dụng đang chạy trên port 8080. Bây giờ tôi sẽ hướng dẫn bạn các bước kiểm tra:

## �� **Bước 1: Kiểm tra Swagger UI**

**Mở trình duyệt và truy cập:**
```
http://localhost:8080/swagger-ui.html
```

**Bạn sẽ thấy:**
- ✅ Giao diện Swagger với tất cả API endpoints
- ✅ 4 nhóm API: User Management, Exam Management, Question Management, Answer Management
- ✅ Có thể click "Try it out" để test từng API

## �� **Bước 2: Kiểm tra H2 Console (Xem dữ liệu)**

**Mở trình duyệt và truy cập:**
```
http://localhost:8080/h2-console
```

**Điền thông tin:**
- **JDBC URL**: `jdbc:h2:mem:exam_system`
- **Username**: `sa`
- **Password**: (để trống)
- Click **Connect**

**Bạn sẽ thấy:**
- ✅ 5 bảng: USERS, EXAMS, QUESTIONS, ANSWERS, RESULTS
- ✅ Dữ liệu mẫu đã được tạo tự động

## �� **Bước 3: Test API với Swagger UI**

### **Test 1: Đăng ký user mới**
1. Trong Swagger UI, tìm `POST /api/users`
2. Click "Try it out"
3. Nhập JSON:
```json
{
  "name": "Nguyễn Văn Test",
  "email": "test@example.com",
  "password": "123456"
}
```
4. Click "Execute"
5. **Kết quả mong đợi**: Status 200, trả về thông tin user đã tạo

### **Test 2: Xem danh sách bài thi**
1. Tìm `GET /api/exams`
2. Click "Try it out"
3. Click "Execute"
4. **Kết quả mong đợi**: Status 200, trả về 2 bài thi (Java Core + Spring Boot)

### **Test 3: Xem câu hỏi của bài thi**
1. Tìm `GET /api/questions/exam/{examId}`
2. Click "Try it out"
3. Nhập `examId`: `1`
4. Click "Execute"
5. **Kết quả mong đợi**: Status 200, trả về 5 câu hỏi Java Core

### **Test 4: Xem danh sách users**
1. Tìm `GET /api/users`
2. Click "Try it out"
3. Click "Execute"
4. **Kết quả mong đợi**: Status 200, trả về 4 users (3 mẫu + 1 vừa tạo)

## �� **Bước 4: Test với Postman (Tùy chọn)**

Nếu bạn có Postman, có thể test:

**1. Đăng ký user:**
```
POST http://localhost:8080/api/users
Content-Type: application/json

{
  "name": "Test User",
  "email": "postman@test.com",
  "password": "123456"
}
```

**2. Lấy bài thi:**
```
GET http://localhost:8080/api/exams
```

**3. Lấy câu hỏi:**
```
GET http://localhost:8080/api/questions/exam/1
```

## �� **Bước 5: Kiểm tra dữ liệu trong H2 Console**

**Sau khi test API, vào H2 Console để xem:**
1. Bảng `USERS`: Có thêm user mới
2. Bảng `EXAMS`: 2 bài thi
3. Bảng `QUESTIONS`: 10 câu hỏi
4. Bảng `ANSWERS`: Rỗng (chưa có ai làm bài)
5. Bảng `RESULTS`: Rỗng (chưa có kết quả)

## 📋 **Bước 6: Test chức năng nộp bài**

**Tạo một bài thi hoàn chỉnh:**
1. Đăng ký user mới
2. Lấy danh sách câu hỏi của bài thi 1
3. Tạo đáp án và nộp bài:
```json
[
  {
    "selectedOption": "A",
    "userId": 1,
    "questionId": 1,
    "examId": 1
  },
  {
    "selectedOption": "B", 
    "userId": 1,
    "questionId": 2,
    "examId": 1
  }
]
```

## ✅ **Dấu hiệu chương trình chạy hoàn hảo:**

1. **Ứng dụng khởi động thành công** ✅
2. **Swagger UI hiển thị đầy đủ** ✅
3. **H2 Console kết nối được** ✅
4. **API trả về đúng dữ liệu** ✅
5. **Dữ liệu mẫu được tạo** ✅
6. **Có thể đăng ký user mới** ✅
7. **Có thể xem bài thi và câu hỏi** ✅

## �� **Các lỗi thường gặp và cách khắc phục:**

- **Port 8080 đã được sử dụng**: Đổi port trong `application.properties`
- **Swagger không hiển thị**: Kiểm tra dependency springdoc
- **H2 Console không kết nối**: Kiểm tra JDBC URL và credentials
- **API trả về lỗi**: Kiểm tra JSON format và validation

**Bạn hãy thử từng bước và cho tôi biết kết quả nhé!** 🚀